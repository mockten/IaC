name: Deploy(Azure)

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.9.5
        
    - name: Set up Terraform variables
      run: |
        echo "github_username = \"${{ secrets.GITHUB_USERNAME }}\"" > temp.tfvars
        echo "github_token    = \"${{ secrets.GITHUB_TOKEN }}\"" >> temp.tfvars
        echo "github_email    = \"${{ secrets.GITHUB_EMAIL }}\"" >> temp.tfvars
        echo "repo_pat = \"${{ secrets.MOCKTEN_REPO_PAT }}\"" >> temp.tfvars

    - name: Initialize Terraform for Azure
      working-directory: azure
      run: terraform init -var-file="../temp.tfvars"
      
    - name: Terraform Apply for Azure
      working-directory: azure
      run: terraform apply -var-file="../temp.tfvars" -auto-approve
      
  local-k8s-deployment:
    needs: deploy
    runs-on: [self-hosted, mockten-vmss]
    steps:
    - name: Check if runner is working and output to /tmp/runner_status.txt
      run: |
        echo "GitHub Actions Runner is running on $(hostname)" > /tmp/runner_status.txt
        echo "Working Directory: $(pwd)" >> /tmp/runner_status.txt
        echo "Date: $(date)" >> /tmp/runner_status.txt
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.9.5
